openapi: 3.0.0
info:
  title: SafeKids API
  description: API for the SafeKids application, including safety, SOS, emergency, path, and helper services.
  version: 1.0.0
externalDocs:
  description: Find out more about SafeKids
  url: https://your-safe-kids-website.com
servers:
  - url: https://your-safe-kids-api.com/api/v1

tags:
  - name: user management
    description: 사용자 계정 관련 작업
  - name: app settings
    description: 앱 기본 구조
  - name: support
    description: 도움말
  - name: permissions
    description: 권한설정
  - name: safety
    description: 안전정보 서비스
  - name: sos
    description: SOS 요청 및 관리 서비스

  - name: paths
    description: 이동경로 설정 및 편차 서비스
  - name: helper
    description: 도움말 관련 작업 및 서비스

paths:

  /users/signup/email:
    post:
      tags:
        - user management
      summary: 이메일 중복 확인 후 회원가입
      operationId: 이메일_중복_확인_후_회원가입
      parameters:
        - name: name
          in: query
          description: 이름
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 패스워드
          required: true
          schema:
            type: string
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            type: string
        - name: phone
          in: query
          description: 전화번호
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 성공적으로 처리되었습니다.
        '400':
          description: 잘못된 요청입니다.
        '401':
          description: 인증 실패
        '500':
          description: 서버 오류

  /users/verify/phone:
    post:
      tags:
        - user management
      summary: 휴대폰 인증 요청 및 확인
      operationId: 휴대폰_인증_요청_및_확인
      parameters:
        - name: phone
          in: query
          description: 전화번호
          required: true
          schema:
            type: string
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/signup/social/{provider}:
    post:
      tags:
        - user management
      summary: 소셜 회원가입 처리
      operationId: 소셜_회원가입_처리
      parameters:
        - name: provider
          in: path
          description: 소셜종류
          required: true
          schema:
            type: string
        - name: providerId
          in: query
          description: 소셜고유Id
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: 유저Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /auth/login/email:
    post:
      tags:
        - user management
      summary: 일반 이메일 로그인
      operationId: 일반_이메일_로그인
      parameters:
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 패스워드
          required: true
          schema:
            type: string
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /auth/login/social:
    post:
      tags:
        - user management
      summary: 소셜 로그인 처리
      operationId: loginWithSocial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  enum: [ kakao, google, naver ]
                  description: 소셜 로그인 제공자
                accessToken:
                  type: string
                  description: 소셜 액세스 토큰
              required:
                - provider
                - accessToken
      responses:
        '200':
          description: 성공적으로 로그인 처리됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/find-id:
    post:
      tags:
        - user management
      summary: 아이디 찾기
      operationId: 아이디_찾기
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 사용자 이름
                phone:
                  type: string
                  description: 인증된 전화번호
              required:
                - name
                - phone
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/reset-password/request:
    post:
      tags:
        - user management
      summary: 비밀번호 재설정 요청
      operationId: 비밀번호_재설정_요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 이메일 주소
                phone:
                  type: string
                  description: 인증된 전화번호
              required:
                - email
                - phone
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/reset-password/confirm:
    post:
      tags:
        - user management
      summary: 비밀번호 재설정 완료
      operationId: 비밀번호_재설정_완료
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                newPassword:
                  type: string
                confirmPassword:
                  type: string
              required:
                - email
                - newPassword
                - confirmPassword
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/{userId}:
    delete:
      tags:
        - user management
      summary: 회원 탈퇴 처리
      operationId: 회원_탈퇴_처리
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /auth/logout:
    post:
      tags:
        - user management
      summary: 로그아웃
      operationId: 로그아웃
      parameters:
        - name: userId
          in: path
          description: 유저Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/{userId}/profile:
    put:
      tags:
        - user management
      summary: 회원정보 수정
      operationId: 회원정보_수정
      parameters:
        - name: userId
          in: path
          description: 유저 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                nickname:
                  type: string
                profileImage:
                  type: string
              required:
                - name
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }


  /users/{userId}/residences:
    post:
      tags:
        - user management
      summary: 주거지 등록
      operationId: 주거지_등록
      parameters:
        - name: userId
          in: path
          description: 유저 ID
          required: true
          schema:
            type: integer
        - name: address
          in: query
          description: 주소
          required: true
          schema:
            type: string
        - name: residenceName
          in: query
          description: 주거단지 이름
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: 위도
          required: true
          schema:
            type: number
        - name: longitude
          in: query
          description: 경도
          required: true
          schema:
            type: number
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/{parentId}/wards:
    post:
      tags:
        - user management
      summary: 피보호자 등록 및 연동
      operationId: 피보호자_등록_및_연동
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                childName:
                  type: string
                  description: 아동 이름
                birthdate:
                  type: string
                  format: date
                gender:
                  type: string
                  enum: [ MALE, FEMALE ]
                height:
                  type: integer
                features:
                  type: string
                  description: 특징 메모
                photoUrl:
                  type: string
                  description: 사진 URL
              required:
                - childName
                - birthdate
                - gender
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/{userId}/link-code:
    post:
      tags:
        - user management
      summary: 보호자-피보호자 연동 코드 생성
      operationId: 연동_코드_생성
      parameters:
        - name: userId
          in: path
          description: 아동Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }

  /users/{userId}/linked-roles:
    get:
      tags:
        - user management
      summary: 연동된 보호자/피보호자 역할 조회
      operationId: 연동_역할_조회
      parameters:
        - name: userId
          in: path
          description: 유저Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': { description: 성공적으로 처리되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '401': { description: 인증 실패 }
        '500': { description: 서버 오류 }


  /settings/notifications:
    put:
      tags:
        - app settings
      summary: 알림 수신 여부 설정
      operationId: updateNotificationSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                push:
                  type: boolean
                sos:
                  type: boolean
                activity:
                  type: boolean
                vibration:
                  type: boolean
                sound:
                  type: boolean
              required:
                - push
                - sos
      responses:
        '200': { description: 설정이 성공적으로 저장되었습니다. }
        '400': { description: 잘못된 요청입니다. }
        '500': { description: 서버 오류 }

  /permissions/request:
    post:
      tags:
        - permissions
      summary: 디바이스 권한 요청 처리
      operationId: requestPermissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: boolean
                camera:
                  type: boolean
                microphone:
                  type: boolean
                gallery:
                  type: boolean
              required:
                - location
      responses:
        '200': { description: 권한 요청 결과 저장됨 }
        '400': { description: 잘못된 요청입니다. }
        '500': { description: 서버 오류 }

  /support/faq:
    get:
      tags:
        - support
      summary: 자주 묻는 질문(FAQ) 목록 조회
      operationId: getFAQ
      responses:
        '200':
          description: FAQ 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    question:
                      type: string
                    answer:
                      type: string
        '500': { description: 서버 오류 }

  /support/notices:
    get:
      tags:
        - support
      summary: 공지사항 목록 조회
      operationId: getNotices
      responses:
        '200':
          description: 공지사항 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
        '500': { description: 서버 오류 }


  # 3. 안전 서비스 (Safety Service)
  /safety/cctv/public:
    get:
      tags:
        - safety
      summary: 공공 CCTV 조회
      description: 공공 CCTV 위치 및 피드를 제공합니다.
      operationId: getPublicCCTV
      responses:
        '200':
          description: 공공 CCTV 위치 및 피드 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CCTVInfo'
        '401':
          description: 인증 실패
        '403':
          description: 접근 권한 없음
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/cctv/private:
    get:
      tags:
        - safety
      summary: 개인 CCTV 조회
      description: 개인 CCTV 위치 및 피드를 제공합니다. (소유자 또는 허가된 사용자만 접근 가능)
      operationId: getPrivateCCTV
      responses:
        '200':
          description: 개인 CCTV 위치 및 피드 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivateCCTVInfo'
        '401':
          description: 인증 실패
        '403':
          description: 접근 권한 없음 (소유자가 아니거나 허가되지 않음)
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/cctv/residence/{residenceId}:
    get:
      tags:
        - safety
      summary: 주거지 주변 CCTV 조회
      description: 주거지 주변 CCTV 조회
      operationId: getResidenceCCTV
      parameters:
        - name: residenceId
          in: path
          description: 주거지 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 주거지 주변 CCTV
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CCTVInfo'
        '404':
          description: Residence not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/cctv/residence:
    post:
      tags:
        - safety
      summary: 주거지 CCTV 등록(보류-어떤식으로 등록할지 미정)
      description: 새로운 주거지에 대한 CCTV 정보를 등록합니다.
      operationId: registerResidenceCCTV
      requestBody:
        description: CCTV 등록 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidenceCCTVRegistration'
      responses:
        '201':
          description: CCTV 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CCTVInfo'
        '400':
          description: 잘못된 CCTV 정보
        '401':
          description: 인증 실패
        '403':
          description: 접근 권한 없음 (해당 주거지 소유자가 아님)
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



  /safety/traffic-info:
    get:
      tags:
        - safety
      summary: 교통 안전 정보 조회
      description: 교통 안전 정보 조회(교통 안전 정보(UTIC활용))
      operationId: getTrafficInfo
      responses:
        '200':
          description: 교통 안전 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficInfo'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/child-map/construction:
    get:
      tags:
        - safety
      summary: 건설 현장 정보 조회
      description: 아동 경로 주변의 건설 현장 정보를 조회합니다.(행안부 어린이 안전지도의 공사현황 제공)
      operationId: getChildMapConstruction
      responses:
        '200':
          description: 건설 현장 정보
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConstructionInfo'
        default:
          description: 예상치 못한 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/device/{childId}/location:
    get:
      tags:
        - safety
      summary: 아동의 실시간 위치 조회
      description: 아동의 실시간 위치 조회
      operationId: getChildDeviceLocation
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 실시간 위치 데이터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: Child not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/device/{childId}/status:
    get:
      tags:
        - safety
      summary: 아동의 실시간 기기 상태 조회(보류-차후에 추가 예정)
      description: 아동의 실시간 기기 상태 조회(베터리, 네트워크 등)
      operationId: getChildDeviceStatus
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 기기 상태 데이터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
        '404':
          description: Child not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/child/{childId}/location/history:
    get:
      tags:
        - safety
      summary: 아동 위치 히스토리 조회
      description: 아동의 과거 위치 기록을 조회합니다.
      operationId: getChildLocationHistory
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: startTime
          in: query
          description: '조회 시작 시간 (ISO 8601 형식: 2024-08-05T00:00:00Z)'
          required: false
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          description: '조회 종료 시간 (ISO 8601 형식: 2024-08-05T23:59:59Z)'
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: '조회할 위치 기록 수 (기본값: 100)'
          required: false
          schema:
            type: integer
            default: 100
      responses:
        '200':
          description: 위치 히스토리 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationHistory'
        '404':
          description: Child not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /safety/child/{childId}/location:
    post:
      tags:
        - safety
      summary: 아동 위치 정보 저장
      description: 아동의 실시간 위치 정보를 저장합니다.
      operationId: saveChildLocation
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 위치 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationData'
      responses:
        '201':
          description: 위치 정보 저장 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationData'
        '400':
          description: 잘못된 위치 정보
        '404':
          description: Child not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



  /safety/child/{childId}/alerts:
    get:
      tags:
        - safety
      summary: 아동 안전 알림 조회
      description: 아동과 관련된 안전 알림 목록을 조회합니다. (3-0-1)
      operationId: getChildSafetyAlerts
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: 알림 상태 필터 (active, resolved, all)
          required: false
          schema:
            type: string
            enum: [active, resolved, all]
            default: all
        - name: limit
          in: query
          description: '조회할 알림 수 (기본값: 14)'
          required: false
          schema:
            type: integer
            default: 14
      responses:
        '200':
          description: 안전 알림 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SafetyAlert'
        '404':
          description: Child not found.
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # SOS
  /sos/{childId}/request:
    post:
      tags:
        - sos
      summary: 아동의 SOS 요청 시
      description: 아동이 SOS 버튼을 누르면 5초 후 보호자에게 알림이 전송됩니다.
      operationId: requestSosByChild
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: SOS 요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SosRequestResponse'
        '400':
          description: Invalid child ID or other request errors.
        '404':
          description: Child not found.
        default:
          description: Unexpected error.

  /sos/{childId}/cancel:
    post:
      tags:
        - sos
      summary: 아동의 SOS요청 취소
      description: 아동이 활성화된 SOS요청을 직접 취소합니다.
      operationId: cancelSosByChild
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: SOS요청 취소 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sosRequestId:
                  type: integer
                  format: int64
                  description: 취소할 SOS 요청의 ID.
      responses:
        '200':
          description: SOS 요청 취소 성공
        '400':
          description: 아동 ID 또는 요청 ID 오류
        '404':
          description: SOS 요청 또는 아동 정보 없음
        default:
          description: 예상치 못한 오류        

# SOS
  /sos/{parentId}/request:
    post:
      tags:
        - sos
      summary: 보호자의 SOS요청
      description: 보호자가 SOS 버튼을 클릭하면 5초 이내에 취소하지 않으면 SOS 요청이 진행되고, 112 자동 문자 신고가 완료됩니다. 아동 정보(이름, 성별, 출생년도, 키, 특이사항)가 헬퍼들에게 SOS 요청과 함께 전송됩니다.
      operationId: requestSosByGuardian
      parameters:
        - name: parentId
          in: path
          description: SOS를 요청하는 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: SOS 요청에 필요한 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                childId:
                  type: integer
                  format: int64
                  description: SOS 요청 대상 아동의 ID
      responses:
        '200':
          description: 보호자의 SOS 요청 성공 (5초 후 자동 진행)
        '400':
          description: 보호자 ID 또는 아동 ID가 유효하지 않거나 누락됨
        '404':
          description: 보호자 또는 아동 정보를 찾을 수 없음
        default:
          description: 예상치 못한 오류

  /sos/{parentId}/cancel:
    post:
      tags:
        - sos
      summary: 보호자의 SOS요청 취소
      description: 보호자가 활성화된 SOS요청을 취소합니다.
      operationId: cancelSosByGuardian
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: SOS요청 취소
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sosRequestId:
                  type: integer
                  format: int64
                  description: The ID of the SOS request to be canceled.
      responses:
        '200':
          description: SOS 요청 취소 성공
        '400':
          description: 보호자 ID 또는 요청 ID 오류
        '404':
          description: SOS 요청 없음
        default:
          description: 예상치 못한 오류

  /sos/{parentId}/request/helper:
    post:
      tags:
        - sos
      summary: 보호자가 주변 헬퍼들에게 도움 요청
      description: 보호자가 주변 헬퍼들에게 도움 요청을 보냅니다.
      operationId: requestHelperByGuardian
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 헬퍼 요청 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelperRequest'
      responses:
        '200':
          description: 헬퍼 요청 성공
        '400':
          description: 보호자 ID 또는 정보 누락
        '404':
          description: 보호자 또는 아동 없음
        default:
          description: 예상치 못한 오류

  /sos/{childId}/re-request:
    post:
      tags:
        - sos
      summary: SOS 재요청 (아동)
      description: 아동이 이전 SOS 요청 후 추가 도움을 재요청합니다. 보호자는 헬퍼들에게 재요청을 할 수 있습니다.
      operationId: reRequestSosByChild
      parameters:
        - name: childId
          in: path
          description: The ID of the child re-requesting help.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 재요청 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requesterType:
                  type: string
                  enum: [child, guardian]
                  description: 재요청자 유형 (아동 또는 보호자)
                additionalInfo:
                  type: string
                  description: 추가 정보 또는 상황 설명
      responses:
        '200':
          description: SOS 재요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SosRequestResponse'
        '400':
          description: 재요청 시간 제한 미충족 또는 기타 요청 오류
        '404':
          description: Child or previous SOS request not found. 아동 또는 이전 SOS 요청 없음
        default:
          description: 예상치 못한 오류

  /sos/{parentId}/re-request:
    post:
      tags:
        - sos
      summary: SOS 재요청 (보호자)
      description: 보호자가 이전 SOS 요청 후 헬퍼들에게 추가 도움을 재요청합니다.
      operationId: reRequestSosByGuardian
      parameters:
        - name: parentId
          in: path
          description: The ID of the guardian re-requesting help.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 재요청 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                additionalInfo:
                  type: string
                  description: 추가 정보 또는 상황 설명
                urgencyLevel:
                  type: string
                  enum: [low, medium, high, critical]
                  description: 긴급도 수준
      responses:
        '200':
          description: SOS 재요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SosRequestResponse'
        '400':
          description: 재요청 시간 제한 미충족 또는 기타 요청 오류
        '404':
          description: Guardian or previous SOS request not found. 보호자 또는 이전 SOS 요청 없음
        default:
          description: 예상치 못한 오류



  # 이동 경로 (Paths)
  /paths/{parentId}/children/{childId}/set:
    post:
      tags:
        - paths
      summary: 보호자가 아동의 이동 경로 설정
      description: 아동의 이동 경로를 설정합니다.
      operationId: setChildPath
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 이동 경로 설정
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: 이동 경로 설정 성공
        '400':
          description: 이동 경로 데이터 오류
        '404':
          description: 보호자 또는 아동 없음
        default:
          description: 예상치 못한 오류

  /paths/{parentId}/children/{childId}/favorites:
    post:
      tags:
        - paths
      summary: 보호자가 즐겨찾기 위치 추가
      description: 자주 방문하는 위치를 즐겨찾기에 추가합니다.
      operationId: addFavoriteLocation
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 즐겨찾기 위치 추가
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 즐겨찾기 위치 추가 성공
        '400':
          description: 즐겨찾기 위치 데이터 오류
        '404':
          description: 보호자 없음
        default:
          description: 예상치 못한 오류
    get:
      tags:
        - paths
      summary: 보호자가 즐겨찾기 위치 조회
      description: 보호자가 설정한 즐겨찾기 위치 목록을 조회합니다.
      operationId: getFavoriteLocations
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 즐겨찾기 위치 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        '404':
          description: Parent not found.
        default:
          description: Unexpected error.
    put:
      tags:
        - paths
      summary: 보호자가 즐겨찾기 위치 수정
      description: 기존 즐겨찾기 위치를 수정합니다.
      operationId: updateFavoriteLocation
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: favoriteId
          in: path
          description: 즐겨찾기 위치 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 수정할 즐겨찾기 위치 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: 즐겨찾기 위치 수정 성공
        '400':
          description: 즐겨찾기 위치 데이터 오류
        '404':
          description: 보호자 또는 즐겨찾기 위치 없음
        default:
          description: 예상치 못한 오류
    delete:
      tags:
        - paths
      summary: 보호자가 즐겨찾기 위치 삭제
      description: 즐겨찾기 위치를 삭제합니다.
      operationId: deleteFavoriteLocation
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: favoriteId
          in: path
          description: 즐겨찾기 위치 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 즐겨찾기 위치 삭제 성공
        '404':
          description: 보호자 또는 즐겨찾기 위치 없음
        default:
          description: 예상치 못한 오류

  /paths/{parentId}/children/{childId}/deviation:
    get:
      tags:
        - paths
      summary: 아동의 이동 경로 벗어남 감지
      description: 아동이 설정된 경로를 벗어나면 보호자에게 알림을 보냅니다. 이는 백엔드에 의해 주기적으로 확인됩니다.
      operationId: getPathDeviationAlert
      parameters:
        - name: parentId
          in: path
          description: 보호자 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 이동 경로 벗어남 감지 알림 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviationAlert'
        '404':
          description: 아동 또는 설정된 경로 없음
        default:
          description: 예상치 못한 오류

  # 헬퍼 (Helper)
  /helper/{childId}/nearby:
    get:
      tags:
        - helper
      summary: 아동 주변 헬퍼 목록 조회
      description: 아동의 현재 위치를 기반으로 주변 헬퍼 목록을 조회합니다.
      operationId: getChildNearbyHelpers
      parameters:
        - name: childId
          in: path
          description: 아동 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: radius
          in: query
          description: '검색 반경 (km, 기본값: 5)'
          required: false
          schema:
            type: number
            format: float
            default: 5.0
      requestBody:
        description: 아동 현재 위치 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationRequest'
      responses:
        '200':
          description: 아동 주변 헬퍼 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    helperId:
                      type: integer
                      format: int64
                      description: 헬퍼 ID
                    name:
                      type: string
                      description: 헬퍼 이름
                    distance:
                      type: number
                      format: float
                      description: 아동 위치로부터의 거리 (km)
                    estimatedTime:
                      type: integer
                      description: 예상 도착 시간 (분)
                    isAvailable:
                      type: boolean
                      description: 현재 도움 가능 여부
                    totalHelps:
                      type: integer
                      description: 총 도움 횟수
        '404':
          description: 아동 정보 없음
        default:
          description: 예상치 못한 오류

  /helper/{helperId}/sos-requests:
    get:
      tags:
        - helper
      summary: 헬퍼가 받은 SOS요청 목록 조회
      description: 헬퍼가 받은 SOS요청 목록 조회
      operationId: getHelperSosRequests
      parameters:
        - name: helperId
          in: path
          description: 헬퍼 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: childId
          in: query
          description: 아동 ID
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: SOS요청 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SosRequest'
        '404':
          description: 헬퍼 없음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/participants:
    get:
      tags:
        - helper
      summary: SOS요청 참여 가능 헬퍼 목록 및 참여자 수 조회
      description: 특정 SOS요청에 대해 참여 가능한 헬퍼 목록과 현재 참여 중인 헬퍼 수를 조회합니다. UI에서는 참여 가능 리스트가 보이고 우측에 "+1" 형태로 참여 중인 헬퍼 수가 표시됩니다.
      operationId: getSosParticipants
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 참여 가능 헬퍼 목록 및 참여자 수
          content:
            application/json:
              schema:
                type: object
                properties:
                  availableHelpers:
                    type: array
                    description: 참여 가능한 헬퍼 목록
                    items:
                      type: object
                      properties:
                        helperId:
                          type: integer
                          format: int64
                          description: 헬퍼 ID
                        name:
                          type: string
                          description: 헬퍼 이름
                        distance:
                          type: number
                          format: float
                          description: SOS 요청 위치로부터의 거리 (km)
                        estimatedTime:
                          type: integer
                          description: 예상 도착 시간 (분)
                        participationStatus:
                          type: string
                          enum: [pending, accepted, rejected, left]
                          description: 참여 상태 (대기/수락/거절/중단)
                  participatingCount:
                    type: integer
                    format: int32
                    description: 현재 참여 중인 헬퍼 수
                  totalAvailable:
                    type: integer
                    format: int32
                    description: 참여 가능한 총 헬퍼 수
        '404':
          description: SOS요청 없음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/accept:
    post:
      tags:
        - helper
      summary: 헬퍼가 SOS요청 수락
      description: 헬퍼가 수락 가능한 SOS요청 수락
      operationId: acceptSosRequest
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: SOS요청 수락 성공
        '400':
          description: SOS요청 이미 다른 헬퍼에 의해 수락되었거나 유효하지 않음
        '404':
          description: SOS request not found.
        default:
          description: Unexpected error.

  /helper/sos-requests/{requestId}/reject:
    post:
      tags:
        - helper
      summary: 헬퍼가 SOS요청 거절
      description: 헬퍼가 SOS요청을 거절합니다
      operationId: rejectSosRequest
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 거절 사유
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: 거절 사유
                  example: "현재 다른 SOS요청 처리 중"
      responses:
        '200':
          description: SOS요청 거절 성공
        '404':
          description: SOS요청 없음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/shared-locations:
    get:
      tags:
        - helper
      summary: 특정 SOS요청의 헬퍼 참여자 위치 조회
      description: 특정 SOS요청의 헬퍼 참여자 위치 조회
      operationId: getSharedHelperLocations
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 참여자 위치 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HelperLocation'
        '404':
          description: SOS요청 없음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/child-info:
    get:
      tags:
        - helper
      summary: 특정 SOS요청의 아동 정보 조회
      description: 특정 SOS요청의 아동 정보 조회
      operationId: getChildInfoForSos
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 아동 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildInfo'
        '404':
          description: SOS요청 없음 또는 헬퍼에 의해 수락되지 않음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/leave:
    post:
      tags:
        - helper
      summary: 헬퍼가 SOS참여 중단
      description: 헬퍼가 SOS요청 참여 중단
      operationId: leaveSosRequest
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 헬퍼 ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                helperId:
                  type: integer
                  format: int64
      responses:
        '200':
          description: 헬퍼가 SOS요청에서 제거되었습니다.
        '404':
          description: SOS요청 또는 헬퍼 없음
        default:
          description: 예상치 못한 오류

  /helper/sos-requests/{requestId}/rejoin:
    post:
      tags:
        - helper
      summary: 헬퍼가 SOS요청 재참여
      description: 헬퍼가 이전에 중단한 SOS요청에 재참여합니다.
      operationId: rejoinSosRequest
      parameters:
        - name: requestId
          in: path
          description: SOS요청 ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 헬퍼 ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                helperId:
                  type: integer
                  format: int64
      responses:
        '200':
          description: 헬퍼가 SOS요청에 재참여했습니다.
        '400':
          description: 헬퍼가 이미 SOS요청에 참여하고 있습니다.
        '404':
          description: SOS요청 또는 헬퍼 없음
        default:
          description: 예상치 못한 오류

components:
  schemas:
    CCTVInfo:
      type: object
      properties:
        cctvId:
          type: integer
          format: int64
        name:
          type: string
          description: CCTV 이름
        location:
          $ref: '#/components/schemas/Location'
        streamUrl:
          type: string
          description: 실시간 비디오 스트림 URL
        managementAgency:
          type: string
          description: 관리 기관명
        installationDate:
          type: string
          format: date-time
          description: 설치 날짜

    PrivateCCTVInfo:
      type: object
      properties:
        cctvId:
          type: integer
          format: int64
        name:
          type: string
          description: CCTV 이름
        location:
          $ref: '#/components/schemas/Location'
        streamUrl:
          type: string
          description: 실시간 비디오 스트림 URL
        ownerId:
          type: integer
          format: int64
          description: 소유자 ID
        ownerName:
          type: string
          description: 소유자 이름
        accessLevel:
          type: string
          enum: [owner, authorized, emergency]
          description: 접근 권한 레벨
        isActive:
          type: boolean
          description: 활성화 상태

    ResidentialCCTVInfo:
      type: object
      properties:
        cctvId:
          type: integer
          format: int64
        name:
          type: string
          description: CCTV 이름
        location:
          $ref: '#/components/schemas/Location'
        streamUrl:
          type: string
          description: 실시간 비디오 스트림 URL
        complexName:
          type: string
          description: 주거단지명
        buildingNumber:
          type: string
          description: 건물 번호
        floor:
          type: integer
          description: 층수
        accessLevel:
          type: string
          enum: [resident, security, emergency]
          description: 접근 권한 레벨
        isActive:
          type: boolean
          description: 활성화 상태

    TrafficInfo:
      type: object
      properties:
        message:
          type: string
          description: 교통사고 정보
          example: "주의 - 교통사고 발생"
        incident:
          type: array
          items:
            type: string
          description: 최근 교통사고 목록
          example: ["강남대로 3km 지점에서 차량 충돌사고", "학교 앞 횡단보도에서 보행자 사고"]

    ConstructionInfo:
      type: object
      properties:
        constructionId:
          type: integer
          format: int64
        siteName:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        status:
          type: string
          description: 건설 상태

    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
        is_moving:
          type: boolean
          description: 아동의 이동 상태
      description: Geographic coordinates and timestamp.

    DeviceStatus:
      type: object
      properties:
        batteryLevel:
          type: number
          format: float
          description: 배터리 수준
        isCharging:
          type: boolean
        networkStatus:
          type: string
          description: 네트워크 상태

    SosRequestResponse:
      type: object
      properties:
        sosRequestId:
          type: integer
          format: int64
          description: 생성된 SOS요청 ID
        message:
          type: string
          description: SOS요청 확인 메시지

    HelperRequest:
      type: object
      properties:
        sosRequestId:
          type: integer
          format: int64
          description: 처리 중인 SOS요청 ID
        childId:
          type: integer
          format: int64
          description: 필요한 아동 ID
        childInfo:
          $ref: '#/components/schemas/ChildInfo'
          description: 아동 정보 (이름, 성별, 출생년도, 키, 특이사항)
        memo:
          type: string
          description: 메모
          example: 아동은 공원 입구 근처에 있으며, 빨간색 재킷을 입고 있습니다.

    Schedule:
      type: object
      properties:
        childId:
          type: integer
          format: int64
        startPlace:
          type: string
        startLocation:
          $ref: '#/components/schemas/Location'
        endPlace:
          type: string
        endLocation:
          $ref: '#/components/schemas/Location'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        days:
          type: string
          description: 요일

    DeviationAlert:
      type: object
      properties:
        deviationId:
          type: integer
          format: int64
        childId:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        deviationLocation:
          $ref: '#/components/schemas/Location'

    SosRequest:
      type: object
      properties:
        sosRequestId:
          type: integer
          format: int64
        childId:
          type: integer
          format: int64
        status:
          type: string
          description: SOS요청 상태
        timestamp:
          type: string
          format: date-time

    ChildInfo:
      type: object
      properties:
        childId:
          type: integer
          format: int64
        name:
          type: string
          description: 아동 이름
        gender:
          type: string
          enum: [male, female]
          description: 아동 성별
        birthYear:
          type: integer
          description: 출생년도
        height:
          type: number
          format: float
          description: 키 (cm)
        memo:
          type: string
          description: 특이사항 (의료 정보, 알레르기 등)
        physicalDescription:
          type: string
          description: 아동 외형 설명
        lastKnownLocation:
          $ref: '#/components/schemas/Location'

    AdultVerificationRequest:
      type: object
      properties:
        idCardType:
          type: string
          description: ID 카드 유형
        idCardNumber:
          type: string
          description: ID 카드 번호

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    SafetyDashboard:
      type: object
      properties:
        childId:
          type: integer
          format: int64
        currentLocation:
          $ref: '#/components/schemas/Location'
        deviceStatus:
          $ref: '#/components/schemas/DeviceStatus'
        activeAlerts:
          type: integer
          description: 활성화된 알림 수
        safetyScore:
          type: number
          format: float
          description: 안전 점수 (0-100)
        lastUpdate:
          type: string
          format: date-time

    LocationHistory:
      type: object
      properties:
        locationId:
          type: integer
          format: int64
        location:
          $ref: '#/components/schemas/Location'
        speed:
          type: number
          format: float
          description: 이동 속도 (km/h)

    LocationData:
      type: object
      properties:
        routeId:
          type: integer
          format: int64
          description: 경로 ID
        latitude:
          type: number
          format: double
          description: 위도
        longitude:
          type: number
          format: double
          description: 경도
        timestamp:
          type: string
          format: date-time
          description: 위치 기록 시간
        isMoving:
          type: boolean
          description: 이동 상태

    ResidenceCCTVRegistration:
      type: object
      properties:
        residenceId:
          type: integer
          format: int64
          description: 주거지 ID
        name:
          type: string
          description: CCTV 이름
        location:
          $ref: '#/components/schemas/Location'
        streamUrl:
          type: string
          description: 실시간 비디오 스트림 URL
        complexName:
          type: string
          description: 주거단지명
        buildingNumber:
          type: string
          description: 건물 번호
        floor:
          type: integer
          description: 층수
        accessLevel:
          type: string
          enum: [resident, security, emergency]
          description: 접근 권한 레벨
        isActive:
          type: boolean
          description: 활성화 상태
          default: true

    SafetyAlert:
      type: object
      properties:
        alertId:
          type: integer
          format: int64
        childId:
          type: integer
          format: int64
        alertType:
          type: string
          enum: [location_deviation, safety_zone_exit, device_offline, sos_triggered]
          description: 알림 타입
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: 알림 심각도
        message:
          type: string
          description: 알림 메시지
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
          format: date-time
        isResolved:
          type: boolean
          description: 해결 여부

    EmergencyContact:
      type: object
      properties:
        contactId:
          type: integer
          format: int64
        name:
          type: string
          description: 연락처 이름
        phoneNumber:
          type: string
          description: 전화번호
        relationship:
          type: string
          description: 관계 (부모, 보호자, 친척 등)
        isPrimary:
          type: boolean
          description: 주요 연락처 여부
        createdAt:
          type: string
          format: date-time

    SafetyReport:
      type: object
      properties:
        reportId:
          type: integer
          format: int64
        childId:
          type: integer
          format: int64
        reportType:
          type: string
          enum: [daily, weekly, monthly]
        reportDate:
          type: string
          format: date
        totalDistance:
          type: number
          format: float
          description: 총 이동 거리 (km)
        safetyScore:
          type: number
          format: float
          description: 안전 점수 (0-100)
        alertsCount:
          type: integer
          description: 알림 발생 횟수
        sosCount:
          type: integer
          description: SOS 요청 횟수
        zonesVisited:
          type: array
          items:
            type: string
          description: 방문한 안전 구역 목록
        summary:
          type: string
          description: 리포트 요약

    LocationRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
          description: 위도
          example: 37.5665
        longitude:
          type: number
          format: double
          description: 경도
          example: 126.9780
        timestamp:
          type: string
          format: date-time
          description: 위치 수집 시간
      required:
        - latitude
        - longitude
      description: 위치 정보 요청 DTO

    HelperLocation:
      type: object
      properties:
        helperId:
          type: integer
          format: int64
          description: 헬퍼 ID
        helperName:
          type: string
          description: 헬퍼 이름
        phoneNumber:
          type: string
          description: 헬퍼 연락처
        latitude:
          type: number
          format: double
          description: 위도
        longitude:
          type: number
          format: double
          description: 경도
        timestamp:
          type: string
          format: date-time
          description: 위치 수집 시간
        isMoving:
          type: boolean
          description: 이동 중 여부
      required:
        - helperId
        - helperName
        - latitude
        - longitude
      description: 헬퍼 위치 정보 DTO